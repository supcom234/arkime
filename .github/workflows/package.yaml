name: Package Arkime
run-name: ${{github.actor}} is building the Arkime Zarf Package
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [main]
permissions:
  id-token: write
  contents: read
env:
  S3_PATH: "s3://${{ secrets.AWS_BUCKET }}/${{ github.repository }}/${{ github.head_ref || github.ref_name }}"
  BRANCH_NAME: "${{ github.head_ref || github.ref_name }}"
  ZARF_PACKAGE: zarf-package-arkime-amd64.tar.zst
  BB_MIN_S3_PATH: "s3://${{ secrets.AWS_BUCKET }}/${{ github.repository }}/dco-foundation/main"
  BB_MIN_PACKAGE: zarf-package-dco-foundation-minimal-amd64.tar.zst
jobs:
  package-create:
    runs-on: [self-hosted]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Zarf
        uses: defenseunicorns/setup-zarf@main
        with:
          version: v0.22.2

      - name: Configure AWS ECR Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{secrets.AWS_ECR_ROLE}}
          role-session-name: arkime-ecr
          aws-region: us-east-1

      - name: ECR Login
        uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr

      - name: Create Zarf Package
        run: |
          if [ -d "./tmp" ]; then
            rm -rf ./tmp
          fi
          mkdir tmp
          zarf package create \
            --set BRANCH="${{ env.BRANCH_NAME }}" \
            --confirm \
            --tmpdir $PWD/tmp \
            --skip-sbom
          rm -rf ./tmp

      - name: Configure AWS S3 Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{secrets.AWS_ROLE}}
          role-session-name: arkime-s3
          aws-region: us-east-1

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.19.5'
          cache: true        

      - name: Pull BB minimal package needed for testing
        run: |
          aws s3 cp --no-progress "${{ env.BB_MIN_S3_PATH }}/${{ env.BB_MIN_PACKAGE }}" "${{ env.BB_MIN_PACKAGE }}"

      - name: Install dependencies for terratest
        run: |
          go get -t ./...

      - name: Run component test
        run: |
          go test

      - name: Publish to S3
        run: |
          aws s3 cp --no-progress "${{ env.ZARF_PACKAGE }}" "${{ env.S3_PATH }}/${{ env.ZARF_PACKAGE }}"
